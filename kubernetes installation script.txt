# disable swap
sudo swapoff -a

# Create the .conf file to load the modules at bootup
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

## Install CRIO Runtime
sudo apt-get update -y
sudo apt-get install -y software-properties-common curl apt-transport-https ca-certificates gpg

sudo curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/ /" | sudo tee /etc/apt/sources.list.d/cri-o.list

sudo apt-get update -y
sudo apt-get install -y cri-o

sudo systemctl daemon-reload
sudo systemctl enable crio --now
sudo systemctl start crio.service

echo "CRI runtime installed successfully"

# Add Kubernetes APT repository and install required packages
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update -y
sudo apt-get install -y kubelet="1.29.0-*" kubectl="1.29.0-*" kubeadm="1.29.0-*"
sudo apt-get update -y
sudo apt-get install -y jq

sudo systemctl enable --now kubelet
sudo systemctl start kubelet

--------------------------------------------------------------------------------------------------------------------

only in the master node:
when you complete all above procedure:

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/calico.yaml
-------------------------------------------------------------------------------------------------------------------

TASK-1
kind: Pod
apiVersion: v1
metadata:
  name: jspiders
spec:
  containers:
    - name: sample1
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Hi everyone; sleep 5; done"]
  restartPolicy: Never      #Default to Always


TASK-2
kind: Pod
apiVersion: v1
metadata:
  name: jspiders
spec:
  containers:
    - name: sample1
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Hi everyone; sleep 5; done"]
    - name: sample1
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Hi everyone; sleep 5; done"]
  restartPolicy: Never      #Default to Always







Worker node history

    1  vi kube.sh
    2  sh kube.sh cat kube.sh 
    3  kubelet --version
    4  sudo kubeadm reset pre-flight checks
    5  sudo kubeadm join 172.31.46.128:6443 --token c0lqy3.1tnql1919grjez5r         --discovery-token-ca-cert-hash sha256:ba0dfed9eae9d61b00e068d4e65cbd61af9126252bb56275950b7466e1ae0802 --v=5
    6  docker --version
    7  kubelet --version
    8  history

Master node history

    1  vi kube.sh
    2  sh kube.sh cat kube.sh 
    3  kubelet --version
    4  sudo kubeadm config images pull
    5  sudo kubeadm init
    6  mkdir -p $HOME/.kube
    7  kubectl get nodes
    8  kubectl get pods
    9  vi pod.yml
   10  kubectl apply -f pod.yml 
   11  kubectl get pods
   12  kubectl delete -f pod.yml 
   13  kubectl get pods
   14  kubectl get nodes
   15  kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/calico.yaml
   16  kubectl get pods
   17  kubectl get nodes
   18  cat pod.yml 
   19  ls
   20  kubectl apply -f pod.yml 
   21  kubectl get pods
   22  kubectl get pods -o wide
   23  kubectl describe pod jspiders
   24  kubectl get pods
   25  kubectl logs -f jspiders
   26  kubectl logs pod jspiders
   27  kubectl logs -f jspiders
   28  kubectl delete -f pod.yml 
   29  kubectl get pods
   30  vi pod.yml 
   31  cat pod.yml 
   32  kubectl apply -f pod.yml 
   33  kubectl get pods
   34  kubectl get pods -o wide
   35  kubectl describe pod jspiders
   36  kubectl log -f jspiders -c c1
   37  kubectl logs -f jspiders -c c1
   38  kubectl delete -f pod.yml 
   39  history


















